{
  "version": 3,
  "sources": ["../../formidable/src/PersistentFile.js", "../../formidable/src/VolatileFile.js", "../../hexoid/dist/index.mjs", "../../wrappy/wrappy.js", "../../once/once.js", "../../asap/browser-raw.js", "../../asap/browser-asap.js", "../../dezalgo/dezalgo.js", "../../formidable/src/parsers/Dummy.js", "../../formidable/src/FormidableError.js", "../../formidable/src/parsers/Multipart.js", "../../formidable/src/Formidable.js", "../../formidable/src/parsers/OctetStream.js", "../../formidable/src/plugins/octetstream.js", "../../formidable/src/parsers/Querystring.js", "../../formidable/src/plugins/querystring.js", "../../formidable/src/plugins/multipart.js", "../../formidable/src/parsers/JSON.js", "../../formidable/src/plugins/json.js", "../../formidable/src/plugins/index.js", "../../formidable/src/parsers/index.js", "../../formidable/src/index.js"],
  "sourcesContent": ["/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst fs = require('fs');\nconst crypto = require('crypto');\nconst { EventEmitter } = require('events');\n\nclass PersistentFile extends EventEmitter {\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm }) {\n    super();\n\n    this.lastModifiedDate = null;\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm });\n\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = new fs.WriteStream(this.filepath);\n    this._writeStream.on('error', (err) => {\n      this.emit('error', err);\n    });\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      filepath: this.filepath,\n      newFilename: this.newFilename,\n      mimetype: this.mimetype,\n      mtime: this.lastModifiedDate,\n      length: this.length,\n      originalFilename: this.originalFilename,\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n\n  toString() {\n    return `PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.lastModifiedDate = new Date();\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n    fs.unlink(this.filepath, () => {});\n  }\n}\n\nmodule.exports = PersistentFile;\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst { EventEmitter } = require('events');\n\nclass VolatileFile extends EventEmitter {\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream }) {\n    super();\n\n    this.lastModifiedDate = null;\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream });\n\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = this.createFileWriteStream(this);\n    this._writeStream.on('error', (err) => {\n      this.emit('error', err);\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      newFilename: this.newFilename,\n      length: this.length,\n      originalFilename: this.originalFilename,\n      mimetype: this.mimetype,\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n\n  toString() {\n    return `VolatileFile: ${this.originalFilename}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed || this._writeStream.destroyed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n}\n\nmodule.exports = VolatileFile;\n", "var IDX=256, HEX=[];\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport default function (len) {\n\tlen = len || 16;\n\tvar str='', num=0;\n\treturn function () {\n\t\tif (!str || num === 256) {\n\t\t\tstr=''; num=(1+len)/2 | 0;\n\t\t\twhile (num--) str += HEX[256 * Math.random() | 0];\n\t\t\tstr = str.substring(num=0, len-2);\n\t\t}\n\t\treturn str + HEX[num++];\n\t};\n}\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(dezalgo)\n\nvar asap = require('asap')\n\nfunction dezalgo (cb) {\n  var sync = true\n  asap(function () {\n    sync = false\n  })\n\n  return function zalgoSafe() {\n    var args = arguments\n    var me = this\n    if (sync)\n      asap(function() {\n        cb.apply(me, args)\n      })\n    else\n      cb.apply(me, args)\n  }\n}\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst { Transform } = require('stream');\n\nclass DummyParser extends Transform {\n  constructor(incomingForm, options = {}) {\n    super();\n    this.globalOptions = { ...options };\n    this.incomingForm = incomingForm;\n  }\n\n  _flush(callback) {\n    this.incomingForm.ended = true;\n    this.incomingForm._maybeEnd();\n    callback();\n  }\n}\n\nmodule.exports = DummyParser;\n", "/* eslint-disable no-plusplus */\n\nconst missingPlugin = 1000;\nconst pluginFunction = 1001;\nconst aborted = 1002;\nconst noParser = 1003;\nconst uninitializedParser = 1004;\nconst filenameNotString = 1005;\nconst maxFieldsSizeExceeded = 1006;\nconst maxFieldsExceeded = 1007;\nconst smallerThanMinFileSize = 1008;\nconst biggerThanMaxFileSize = 1009;\nconst noEmptyFiles = 1010;\nconst missingContentType = 1011;\nconst malformedMultipart = 1012;\nconst missingMultipartBoundary = 1013;\nconst unknownTransferEncoding = 1014;\n\nconst FormidableError = class extends Error {\n  constructor(message, internalCode, httpCode = 500) {\n    super(message);\n    this.code = internalCode;\n    this.httpCode = httpCode;\n  }\n};\n\nmodule.exports = {\n  missingPlugin,\n  pluginFunction,\n  aborted,\n  noParser,\n  uninitializedParser,\n  filenameNotString,\n  maxFieldsSizeExceeded,\n  maxFieldsExceeded,\n  smallerThanMinFileSize,\n  biggerThanMaxFileSize,\n  noEmptyFiles,\n  missingContentType,\n  malformedMultipart,\n  missingMultipartBoundary,\n  unknownTransferEncoding,\n\n  FormidableError,\n};\n", "/* eslint-disable no-fallthrough */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst { Transform } = require('stream');\nconst errors = require('../FormidableError.js');\n\nconst { FormidableError } = errors;\n\nlet s = 0;\nconst STATE = {\n  PARSER_UNINITIALIZED: s++,\n  START: s++,\n  START_BOUNDARY: s++,\n  HEADER_FIELD_START: s++,\n  HEADER_FIELD: s++,\n  HEADER_VALUE_START: s++,\n  HEADER_VALUE: s++,\n  HEADER_VALUE_ALMOST_DONE: s++,\n  HEADERS_ALMOST_DONE: s++,\n  PART_DATA_START: s++,\n  PART_DATA: s++,\n  PART_END: s++,\n  END: s++,\n};\n\nlet f = 1;\nconst FBOUNDARY = { PART_BOUNDARY: f, LAST_BOUNDARY: (f *= 2) };\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nfunction lower(c) {\n  return c | 0x20;\n}\n\nexports.STATES = {};\n\nObject.keys(STATE).forEach((stateName) => {\n  exports.STATES[stateName] = STATE[stateName];\n});\n\nclass MultipartParser extends Transform {\n  constructor(options = {}) {\n    super({ readableObjectMode: true });\n    this.boundary = null;\n    this.boundaryChars = null;\n    this.lookbehind = null;\n    this.bufferLength = 0;\n    this.state = STATE.PARSER_UNINITIALIZED;\n\n    this.globalOptions = { ...options };\n    this.index = null;\n    this.flags = 0;\n  }\n\n  _flush(done) {\n    if (\n      (this.state === STATE.HEADER_FIELD_START && this.index === 0) ||\n      (this.state === STATE.PART_DATA && this.index === this.boundary.length)\n    ) {\n      this._handleCallback('partEnd');\n      this._handleCallback('end');\n      done();\n    } else if (this.state !== STATE.END) {\n      done(\n        new FormidableError(\n          `MultipartParser.end(): stream ended unexpectedly: ${this.explain()}`,\n          errors.malformedMultipart,\n          400,\n        ),\n      );\n    }\n  }\n\n  initWithBoundary(str) {\n    this.boundary = Buffer.from(`\\r\\n--${str}`);\n    this.lookbehind = Buffer.alloc(this.boundary.length + 8);\n    this.state = STATE.START;\n    this.boundaryChars = {};\n\n    for (let i = 0; i < this.boundary.length; i++) {\n      this.boundaryChars[this.boundary[i]] = true;\n    }\n  }\n\n  // eslint-disable-next-line max-params\n  _handleCallback(name, buf, start, end) {\n    if (start !== undefined && start === end) {\n      return;\n    }\n    this.push({ name, buffer: buf, start, end });\n  }\n\n  // eslint-disable-next-line max-statements\n  _transform(buffer, _, done) {\n    let i = 0;\n    let prevIndex = this.index;\n    let { index, state, flags } = this;\n    const { lookbehind, boundary, boundaryChars } = this;\n    const boundaryLength = boundary.length;\n    const boundaryEnd = boundaryLength - 1;\n    this.bufferLength = buffer.length;\n    let c = null;\n    let cl = null;\n\n    const setMark = (name, idx) => {\n      this[`${name}Mark`] = typeof idx === 'number' ? idx : i;\n    };\n\n    const clearMarkSymbol = (name) => {\n      delete this[`${name}Mark`];\n    };\n\n    const dataCallback = (name, shouldClear) => {\n      const markSymbol = `${name}Mark`;\n      if (!(markSymbol in this)) {\n        return;\n      }\n\n      if (!shouldClear) {\n        this._handleCallback(name, buffer, this[markSymbol], buffer.length);\n        setMark(name, 0);\n      } else {\n        this._handleCallback(name, buffer, this[markSymbol], i);\n        clearMarkSymbol(name);\n      }\n    };\n\n    for (i = 0; i < this.bufferLength; i++) {\n      c = buffer[i];\n      switch (state) {\n        case STATE.PARSER_UNINITIALIZED:\n          return i;\n        case STATE.START:\n          index = 0;\n          state = STATE.START_BOUNDARY;\n        case STATE.START_BOUNDARY:\n          if (index === boundary.length - 2) {\n            if (c === HYPHEN) {\n              flags |= FBOUNDARY.LAST_BOUNDARY;\n            } else if (c !== CR) {\n              return i;\n            }\n            index++;\n            break;\n          } else if (index - 1 === boundary.length - 2) {\n            if (flags & FBOUNDARY.LAST_BOUNDARY && c === HYPHEN) {\n              this._handleCallback('end');\n              state = STATE.END;\n              flags = 0;\n            } else if (!(flags & FBOUNDARY.LAST_BOUNDARY) && c === LF) {\n              index = 0;\n              this._handleCallback('partBegin');\n              state = STATE.HEADER_FIELD_START;\n            } else {\n              return i;\n            }\n            break;\n          }\n\n          if (c !== boundary[index + 2]) {\n            index = -2;\n          }\n          if (c === boundary[index + 2]) {\n            index++;\n          }\n          break;\n        case STATE.HEADER_FIELD_START:\n          state = STATE.HEADER_FIELD;\n          setMark('headerField');\n          index = 0;\n        case STATE.HEADER_FIELD:\n          if (c === CR) {\n            clearMarkSymbol('headerField');\n            state = STATE.HEADERS_ALMOST_DONE;\n            break;\n          }\n\n          index++;\n          if (c === HYPHEN) {\n            break;\n          }\n\n          if (c === COLON) {\n            if (index === 1) {\n              // empty header field\n              return i;\n            }\n            dataCallback('headerField', true);\n            state = STATE.HEADER_VALUE_START;\n            break;\n          }\n\n          cl = lower(c);\n          if (cl < A || cl > Z) {\n            return i;\n          }\n          break;\n        case STATE.HEADER_VALUE_START:\n          if (c === SPACE) {\n            break;\n          }\n\n          setMark('headerValue');\n          state = STATE.HEADER_VALUE;\n        case STATE.HEADER_VALUE:\n          if (c === CR) {\n            dataCallback('headerValue', true);\n            this._handleCallback('headerEnd');\n            state = STATE.HEADER_VALUE_ALMOST_DONE;\n          }\n          break;\n        case STATE.HEADER_VALUE_ALMOST_DONE:\n          if (c !== LF) {\n            return i;\n          }\n          state = STATE.HEADER_FIELD_START;\n          break;\n        case STATE.HEADERS_ALMOST_DONE:\n          if (c !== LF) {\n            return i;\n          }\n\n          this._handleCallback('headersEnd');\n          state = STATE.PART_DATA_START;\n          break;\n        case STATE.PART_DATA_START:\n          state = STATE.PART_DATA;\n          setMark('partData');\n        case STATE.PART_DATA:\n          prevIndex = index;\n\n          if (index === 0) {\n            // boyer-moore derrived algorithm to safely skip non-boundary data\n            i += boundaryEnd;\n            while (i < this.bufferLength && !(buffer[i] in boundaryChars)) {\n              i += boundaryLength;\n            }\n            i -= boundaryEnd;\n            c = buffer[i];\n          }\n\n          if (index < boundary.length) {\n            if (boundary[index] === c) {\n              if (index === 0) {\n                dataCallback('partData', true);\n              }\n              index++;\n            } else {\n              index = 0;\n            }\n          } else if (index === boundary.length) {\n            index++;\n            if (c === CR) {\n              // CR = part boundary\n              flags |= FBOUNDARY.PART_BOUNDARY;\n            } else if (c === HYPHEN) {\n              // HYPHEN = end boundary\n              flags |= FBOUNDARY.LAST_BOUNDARY;\n            } else {\n              index = 0;\n            }\n          } else if (index - 1 === boundary.length) {\n            if (flags & FBOUNDARY.PART_BOUNDARY) {\n              index = 0;\n              if (c === LF) {\n                // unset the PART_BOUNDARY flag\n                flags &= ~FBOUNDARY.PART_BOUNDARY;\n                this._handleCallback('partEnd');\n                this._handleCallback('partBegin');\n                state = STATE.HEADER_FIELD_START;\n                break;\n              }\n            } else if (flags & FBOUNDARY.LAST_BOUNDARY) {\n              if (c === HYPHEN) {\n                this._handleCallback('partEnd');\n                this._handleCallback('end');\n                state = STATE.END;\n                flags = 0;\n              } else {\n                index = 0;\n              }\n            } else {\n              index = 0;\n            }\n          }\n\n          if (index > 0) {\n            // when matching a possible boundary, keep a lookbehind reference\n            // in case it turns out to be a false lead\n            lookbehind[index - 1] = c;\n          } else if (prevIndex > 0) {\n            // if our boundary turned out to be rubbish, the captured lookbehind\n            // belongs to partData\n            this._handleCallback('partData', lookbehind, 0, prevIndex);\n            prevIndex = 0;\n            setMark('partData');\n\n            // reconsider the current character even so it interrupted the sequence\n            // it could be the beginning of a new sequence\n            i--;\n          }\n\n          break;\n        case STATE.END:\n          break;\n        default:\n          return i;\n      }\n    }\n\n    dataCallback('headerField');\n    dataCallback('headerValue');\n    dataCallback('partData');\n\n    this.index = index;\n    this.state = state;\n    this.flags = flags;\n\n    done();\n    return this.bufferLength;\n  }\n\n  explain() {\n    return `state = ${MultipartParser.stateToString(this.state)}`;\n  }\n}\n\n// eslint-disable-next-line consistent-return\nMultipartParser.stateToString = (stateNumber) => {\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const stateName in STATE) {\n    const number = STATE[stateName];\n    if (number === stateNumber) return stateName;\n  }\n};\n\nmodule.exports = Object.assign(MultipartParser, { STATES: exports.STATES });\n", "/* eslint-disable class-methods-use-this */\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst os = require('os');\nconst path = require('path');\nconst hexoid = require('hexoid');\nconst once = require('once');\nconst dezalgo = require('dezalgo');\nconst { EventEmitter } = require('events');\nconst { StringDecoder } = require('string_decoder');\nconst qs = require('qs');\n\nconst toHexoId = hexoid(25);\nconst DEFAULT_OPTIONS = {\n  maxFields: 1000,\n  maxFieldsSize: 20 * 1024 * 1024,\n  maxFileSize: 200 * 1024 * 1024,\n  minFileSize: 1,\n  allowEmptyFiles: true,\n  keepExtensions: false,\n  encoding: 'utf-8',\n  hashAlgorithm: false,\n  uploadDir: os.tmpdir(),\n  multiples: false,\n  enabledPlugins: ['octetstream', 'querystring', 'multipart', 'json'],\n  fileWriteStreamHandler: null,\n  defaultInvalidName: 'invalid-name',\n  filter: function () {\n    return true;\n  },\n};\n\nconst PersistentFile = require('./PersistentFile');\nconst VolatileFile = require('./VolatileFile');\nconst DummyParser = require('./parsers/Dummy');\nconst MultipartParser = require('./parsers/Multipart');\nconst errors = require('./FormidableError.js');\n\nconst { FormidableError } = errors;\n\nfunction hasOwnProp(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nclass IncomingForm extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n\n    const dir = path.resolve(\n      this.options.uploadDir || this.options.uploaddir || os.tmpdir(),\n    );\n\n    this.uploaddir = dir;\n    this.uploadDir = dir;\n\n    // initialize with null\n    [\n      'error',\n      'headers',\n      'type',\n      'bytesExpected',\n      'bytesReceived',\n      '_parser',\n    ].forEach((key) => {\n      this[key] = null;\n    });\n\n    this._setUpRename();\n\n    this._flushing = 0;\n    this._fieldsSize = 0;\n    this._fileSize = 0;\n    this._plugins = [];\n    this.openedFiles = [];\n\n    this.options.enabledPlugins = []\n      .concat(this.options.enabledPlugins)\n      .filter(Boolean);\n\n    if (this.options.enabledPlugins.length === 0) {\n      throw new FormidableError(\n        'expect at least 1 enabled builtin plugin, see options.enabledPlugins',\n        errors.missingPlugin,\n      );\n    }\n\n    this.options.enabledPlugins.forEach((pluginName) => {\n      const plgName = pluginName.toLowerCase();\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      this.use(require(path.join(__dirname, 'plugins', `${plgName}.js`)));\n    });\n\n    this._setUpMaxFields();\n  }\n\n  use(plugin) {\n    if (typeof plugin !== 'function') {\n      throw new FormidableError(\n        '.use: expect `plugin` to be a function',\n        errors.pluginFunction,\n      );\n    }\n    this._plugins.push(plugin.bind(this));\n    return this;\n  }\n\n  parse(req, cb) {\n    this.pause = () => {\n      try {\n        req.pause();\n      } catch (err) {\n        // the stream was destroyed\n        if (!this.ended) {\n          // before it was completed, crash & burn\n          this._error(err);\n        }\n        return false;\n      }\n      return true;\n    };\n\n    this.resume = () => {\n      try {\n        req.resume();\n      } catch (err) {\n        // the stream was destroyed\n        if (!this.ended) {\n          // before it was completed, crash & burn\n          this._error(err);\n        }\n        return false;\n      }\n\n      return true;\n    };\n\n    // Setup callback first, so we don't miss anything from data events emitted immediately.\n    if (cb) {\n      const callback = once(dezalgo(cb));\n      const fields = {};\n      let mockFields = '';\n      const files = {};\n\n      this.on('field', (name, value) => {\n        if (\n          this.options.multiples &&\n          (this.type === 'multipart' || this.type === 'urlencoded')\n        ) {\n          const mObj = { [name]: value };\n          mockFields = mockFields\n            ? `${mockFields}&${qs.stringify(mObj)}`\n            : `${qs.stringify(mObj)}`;\n        } else {\n          fields[name] = value;\n        }\n      });\n      this.on('file', (name, file) => {\n        // TODO: too much nesting\n        if (this.options.multiples) {\n          if (hasOwnProp(files, name)) {\n            if (!Array.isArray(files[name])) {\n              files[name] = [files[name]];\n            }\n            files[name].push(file);\n          } else {\n            files[name] = file;\n          }\n        } else {\n          files[name] = file;\n        }\n      });\n      this.on('error', (err) => {\n        callback(err, fields, files);\n      });\n      this.on('end', () => {\n        if (this.options.multiples) {\n          Object.assign(fields, qs.parse(mockFields));\n        }\n        callback(null, fields, files);\n      });\n    }\n\n    // Parse headers and setup the parser, ready to start listening for data.\n    this.writeHeaders(req.headers);\n\n    // Start listening for data.\n    req\n      .on('error', (err) => {\n        this._error(err);\n      })\n      .on('aborted', () => {\n        this.emit('aborted');\n        this._error(new FormidableError('Request aborted', errors.aborted));\n      })\n      .on('data', (buffer) => {\n        try {\n          this.write(buffer);\n        } catch (err) {\n          this._error(err);\n        }\n      })\n      .on('end', () => {\n        if (this.error) {\n          return;\n        }\n        if (this._parser) {\n          this._parser.end();\n        }\n        this._maybeEnd();\n      });\n\n    return this;\n  }\n\n  writeHeaders(headers) {\n    this.headers = headers;\n    this._parseContentLength();\n    this._parseContentType();\n\n    if (!this._parser) {\n      this._error(\n        new FormidableError(\n          'no parser found',\n          errors.noParser,\n          415, // Unsupported Media Type\n        ),\n      );\n      return;\n    }\n\n    this._parser.once('error', (error) => {\n      this._error(error);\n    });\n  }\n\n  write(buffer) {\n    if (this.error) {\n      return null;\n    }\n    if (!this._parser) {\n      this._error(\n        new FormidableError('uninitialized parser', errors.uninitializedParser),\n      );\n      return null;\n    }\n\n    this.bytesReceived += buffer.length;\n    this.emit('progress', this.bytesReceived, this.bytesExpected);\n\n    this._parser.write(buffer);\n\n    return this.bytesReceived;\n  }\n\n  pause() {\n    // this does nothing, unless overwritten in IncomingForm.parse\n    return false;\n  }\n\n  resume() {\n    // this does nothing, unless overwritten in IncomingForm.parse\n    return false;\n  }\n\n  onPart(part) {\n    // this method can be overwritten by the user\n    this._handlePart(part);\n  }\n\n  _handlePart(part) {\n    if (part.originalFilename && typeof part.originalFilename !== 'string') {\n      this._error(\n        new FormidableError(\n          `the part.originalFilename should be string when it exists`,\n          errors.filenameNotString,\n        ),\n      );\n      return;\n    }\n\n    // This MUST check exactly for undefined. You can not change it to !part.originalFilename.\n\n    // todo: uncomment when switch tests to Jest\n    // console.log(part);\n\n    // ? NOTE(@tunnckocore): no it can be any falsey value, it most probably depends on what's returned\n    // from somewhere else. Where recently I changed the return statements\n    // and such thing because code style\n    // ? NOTE(@tunnckocore): or even better, if there is no mimetype, then it's for sure a field\n    // ? NOTE(@tunnckocore): originalFilename is an empty string when a field?\n    if (!part.mimetype) {\n      let value = '';\n      const decoder = new StringDecoder(\n        part.transferEncoding || this.options.encoding,\n      );\n\n      part.on('data', (buffer) => {\n        this._fieldsSize += buffer.length;\n        if (this._fieldsSize > this.options.maxFieldsSize) {\n          this._error(\n            new FormidableError(\n              `options.maxFieldsSize (${this.options.maxFieldsSize} bytes) exceeded, received ${this._fieldsSize} bytes of field data`,\n              errors.maxFieldsSizeExceeded,\n              413, // Payload Too Large\n            ),\n          );\n          return;\n        }\n        value += decoder.write(buffer);\n      });\n\n      part.on('end', () => {\n        this.emit('field', part.name, value);\n      });\n      return;\n    }\n\n    if (!this.options.filter(part)) {\n      return;\n    }\n\n    this._flushing += 1;\n\n    const newFilename = this._getNewName(part);\n    const filepath = this._joinDirectoryName(newFilename);\n    const file = this._newFile({\n      newFilename,\n      filepath,\n      originalFilename: part.originalFilename,\n      mimetype: part.mimetype,\n    });\n    file.on('error', (err) => {\n      this._error(err);\n    });\n    this.emit('fileBegin', part.name, file);\n\n    file.open();\n    this.openedFiles.push(file);\n\n    part.on('data', (buffer) => {\n      this._fileSize += buffer.length;\n      if (this._fileSize < this.options.minFileSize) {\n        this._error(\n          new FormidableError(\n            `options.minFileSize (${this.options.minFileSize} bytes) inferior, received ${this._fileSize} bytes of file data`,\n            errors.smallerThanMinFileSize,\n            400,\n          ),\n        );\n        return;\n      }\n      if (this._fileSize > this.options.maxFileSize) {\n        this._error(\n          new FormidableError(\n            `options.maxFileSize (${this.options.maxFileSize} bytes) exceeded, received ${this._fileSize} bytes of file data`,\n            errors.biggerThanMaxFileSize,\n            413,\n          ),\n        );\n        return;\n      }\n      if (buffer.length === 0) {\n        return;\n      }\n      this.pause();\n      file.write(buffer, () => {\n        this.resume();\n      });\n    });\n\n    part.on('end', () => {\n      if (!this.options.allowEmptyFiles && this._fileSize === 0) {\n        this._error(\n          new FormidableError(\n            `options.allowEmptyFiles is false, file size should be greather than 0`,\n            errors.noEmptyFiles,\n            400,\n          ),\n        );\n        return;\n      }\n\n      file.end(() => {\n        this._flushing -= 1;\n        this.emit('file', part.name, file);\n        this._maybeEnd();\n      });\n    });\n  }\n\n  // eslint-disable-next-line max-statements\n  _parseContentType() {\n    if (this.bytesExpected === 0) {\n      this._parser = new DummyParser(this, this.options);\n      return;\n    }\n\n    if (!this.headers['content-type']) {\n      this._error(\n        new FormidableError(\n          'bad content-type header, no content-type',\n          errors.missingContentType,\n          400,\n        ),\n      );\n      return;\n    }\n\n    const results = [];\n    const _dummyParser = new DummyParser(this, this.options);\n\n    // eslint-disable-next-line no-plusplus\n    for (let idx = 0; idx < this._plugins.length; idx++) {\n      const plugin = this._plugins[idx];\n\n      let pluginReturn = null;\n\n      try {\n        pluginReturn = plugin(this, this.options) || this;\n      } catch (err) {\n        // directly throw from the `form.parse` method;\n        // there is no other better way, except a handle through options\n        const error = new FormidableError(\n          `plugin on index ${idx} failed with: ${err.message}`,\n          errors.pluginFailed,\n          500,\n        );\n        error.idx = idx;\n        throw error;\n      }\n\n      Object.assign(this, pluginReturn);\n\n      // todo: use Set/Map and pass plugin name instead of the `idx` index\n      this.emit('plugin', idx, pluginReturn);\n      results.push(pluginReturn);\n    }\n\n    this.emit('pluginsResults', results);\n\n    // NOTE: probably not needed, because we check options.enabledPlugins in the constructor\n    // if (results.length === 0 /* && results.length !== this._plugins.length */) {\n    //   this._error(\n    //     new Error(\n    //       `bad content-type header, unknown content-type: ${this.headers['content-type']}`,\n    //     ),\n    //   );\n    // }\n  }\n\n  _error(err, eventName = 'error') {\n    // if (!err && this.error) {\n    //   this.emit('error', this.error);\n    //   return;\n    // }\n    if (this.error || this.ended) {\n      return;\n    }\n\n    this.error = err;\n    this.emit(eventName, err);\n\n    if (Array.isArray(this.openedFiles)) {\n      this.openedFiles.forEach((file) => {\n        file.destroy();\n      });\n    }\n  }\n\n  _parseContentLength() {\n    this.bytesReceived = 0;\n    if (this.headers['content-length']) {\n      this.bytesExpected = parseInt(this.headers['content-length'], 10);\n    } else if (this.headers['transfer-encoding'] === undefined) {\n      this.bytesExpected = 0;\n    }\n\n    if (this.bytesExpected !== null) {\n      this.emit('progress', this.bytesReceived, this.bytesExpected);\n    }\n  }\n\n  _newParser() {\n    return new MultipartParser(this.options);\n  }\n\n  _newFile({ filepath, originalFilename, mimetype, newFilename }) {\n    return this.options.fileWriteStreamHandler\n      ? new VolatileFile({\n          newFilename,\n          filepath,\n          originalFilename,\n          mimetype,\n          createFileWriteStream: this.options.fileWriteStreamHandler,\n          hashAlgorithm: this.options.hashAlgorithm,\n        })\n      : new PersistentFile({\n          newFilename,\n          filepath,\n          originalFilename,\n          mimetype,\n          hashAlgorithm: this.options.hashAlgorithm,\n        });\n  }\n\n  _getFileName(headerValue) {\n    // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n    const m = headerValue.match(\n      /\\bfilename=(\"(.*?)\"|([^()<>{}[\\]@,;:\"?=\\s/\\t]+))($|;\\s)/i,\n    );\n    if (!m) return null;\n\n    const match = m[2] || m[3] || '';\n    let originalFilename = match.substr(match.lastIndexOf('\\\\') + 1);\n    originalFilename = originalFilename.replace(/%22/g, '\"');\n    originalFilename = originalFilename.replace(/&#([\\d]{4});/g, (_, code) =>\n      String.fromCharCode(code),\n    );\n\n    return originalFilename;\n  }\n\n  _getExtension(str) {\n    if (!str) {\n      return '';\n    }\n\n    const basename = path.basename(str);\n    const firstDot = basename.indexOf('.');\n    const lastDot = basename.lastIndexOf('.');\n    const extname = path.extname(basename).replace(/(\\.[a-z0-9]+).*/i, '$1');\n\n    if (firstDot === lastDot) {\n      return extname;\n    }\n\n    return basename.slice(firstDot, lastDot) + extname;\n  }\n\n\n\n  _joinDirectoryName(name) {\n    const newPath = path.join(this.uploadDir, name);\n\n    // prevent directory traversal attacks\n    if (!newPath.startsWith(this.uploadDir)) {\n      return path.join(this.uploadDir, this.options.defaultInvalidName);\n    }\n\n    return newPath;\n  }\n\n  _setUpRename() {\n    const hasRename = typeof this.options.filename === 'function';\n    if (hasRename) {\n      this._getNewName = (part) => {\n        let ext = '';\n        let name = this.options.defaultInvalidName;\n        if (part.originalFilename) {\n          // can be null\n          ({ ext, name } = path.parse(part.originalFilename));\n          if (this.options.keepExtensions !== true) {\n            ext = '';\n          }\n        }\n        return this.options.filename.call(this, name, ext, part, this);\n      };\n    } else {\n      this._getNewName = (part) => {\n        const name = toHexoId();\n\n        if (part && this.options.keepExtensions) {\n          const originalFilename = typeof part === 'string' ? part : part.originalFilename;\n          return `${name}${this._getExtension(originalFilename)}`;\n        }\n    \n        return name;\n      }\n    }\n  }\n\n  _setUpMaxFields() {\n    if (this.options.maxFields !== 0) {\n      let fieldsCount = 0;\n      this.on('field', () => {\n        fieldsCount += 1;\n        if (fieldsCount > this.options.maxFields) {\n          this._error(\n            new FormidableError(\n              `options.maxFields (${this.options.maxFields}) exceeded`,\n              errors.maxFieldsExceeded,\n              413,\n            ),\n          );\n        }\n      });\n    }\n  }\n\n  _maybeEnd() {\n    // console.log('ended', this.ended);\n    // console.log('_flushing', this._flushing);\n    // console.log('error', this.error);\n    if (!this.ended || this._flushing || this.error) {\n      return;\n    }\n\n    this.emit('end');\n  }\n}\n\nIncomingForm.DEFAULT_OPTIONS = DEFAULT_OPTIONS;\nmodule.exports = IncomingForm;\n", "'use strict';\n\nconst { PassThrough } = require('stream');\n\nclass OctetStreamParser extends PassThrough {\n  constructor(options = {}) {\n    super();\n    this.globalOptions = { ...options };\n  }\n}\n\nmodule.exports = OctetStreamParser;\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst OctetStreamParser = require('../parsers/OctetStream');\n\n// the `options` is also available through the `options` / `formidable.options`\nmodule.exports = function plugin(formidable, options) {\n  // the `this` context is always formidable, as the first argument of a plugin\n  // but this allows us to customize/test each plugin\n\n  /* istanbul ignore next */\n  const self = this || formidable;\n\n  if (/octet-stream/i.test(self.headers['content-type'])) {\n    init.call(self, self, options);\n  }\n\n  return self;\n};\n\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\n// of the passed `options` (second) param, because when you decide\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\nfunction init(_self, _opts) {\n  this.type = 'octet-stream';\n  const originalFilename = this.headers['x-file-name'];\n  const mimetype = this.headers['content-type'];\n\n  const thisPart = {\n    originalFilename,\n    mimetype,\n  };\n  const newFilename = this._getNewName(thisPart);\n  const filepath = this._joinDirectoryName(newFilename);\n  const file = this._newFile({\n    newFilename,\n    filepath,\n    originalFilename,\n    mimetype,\n  });\n\n  this.emit('fileBegin', originalFilename, file);\n  file.open();\n  this.openedFiles.push(file);\n  this._flushing += 1;\n\n  this._parser = new OctetStreamParser(this.options);\n\n  // Keep track of writes that haven't finished so we don't emit the file before it's done being written\n  let outstandingWrites = 0;\n\n  this._parser.on('data', (buffer) => {\n    this.pause();\n    outstandingWrites += 1;\n\n    file.write(buffer, () => {\n      outstandingWrites -= 1;\n      this.resume();\n\n      if (this.ended) {\n        this._parser.emit('doneWritingFile');\n      }\n    });\n  });\n\n  this._parser.on('end', () => {\n    this._flushing -= 1;\n    this.ended = true;\n\n    const done = () => {\n      file.end(() => {\n        this.emit('file', 'file', file);\n        this._maybeEnd();\n      });\n    };\n\n    if (outstandingWrites === 0) {\n      done();\n    } else {\n      this._parser.once('doneWritingFile', done);\n    }\n  });\n\n  return this;\n}\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst { Transform } = require('stream');\nconst querystring = require('querystring');\n\n// This is a buffering parser, not quite as nice as the multipart one.\n// If I find time I'll rewrite this to be fully streaming as well\nclass QuerystringParser extends Transform {\n  constructor(options = {}) {\n    super({ readableObjectMode: true });\n    this.globalOptions = { ...options };\n    this.buffer = '';\n    this.bufferLength = 0;\n  }\n\n  _transform(buffer, encoding, callback) {\n    this.buffer += buffer.toString('ascii');\n    this.bufferLength = this.buffer.length;\n    callback();\n  }\n\n  _flush(callback) {\n    const fields = querystring.parse(this.buffer, '&', '=');\n    // eslint-disable-next-line no-restricted-syntax, guard-for-in\n    for (const key in fields) {\n      this.push({\n        key,\n        value: fields[key],\n      });\n    }\n    this.buffer = '';\n    callback();\n  }\n}\n\nmodule.exports = QuerystringParser;\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst QuerystringParser = require('../parsers/Querystring');\n\n// the `options` is also available through the `this.options` / `formidable.options`\nmodule.exports = function plugin(formidable, options) {\n  // the `this` context is always formidable, as the first argument of a plugin\n  // but this allows us to customize/test each plugin\n\n  /* istanbul ignore next */\n  const self = this || formidable;\n\n  if (/urlencoded/i.test(self.headers['content-type'])) {\n    init.call(self, self, options);\n  }\n\n  return self;\n};\n\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\n// of the passed `options` (second) param, because when you decide\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\nfunction init(_self, _opts) {\n  this.type = 'urlencoded';\n\n  const parser = new QuerystringParser(this.options);\n\n  parser.on('data', ({ key, value }) => {\n    this.emit('field', key, value);\n  });\n\n  parser.once('end', () => {\n    this.ended = true;\n    this._maybeEnd();\n  });\n\n  this._parser = parser;\n\n  return this;\n}\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst { Stream } = require('stream');\nconst MultipartParser = require('../parsers/Multipart');\nconst errors = require('../FormidableError.js');\n\nconst { FormidableError } = errors;\n\n// the `options` is also available through the `options` / `formidable.options`\nmodule.exports = function plugin(formidable, options) {\n  // the `this` context is always formidable, as the first argument of a plugin\n  // but this allows us to customize/test each plugin\n\n  /* istanbul ignore next */\n  const self = this || formidable;\n\n  // NOTE: we (currently) support both multipart/form-data and multipart/related\n  const multipart = /multipart/i.test(self.headers['content-type']);\n\n  if (multipart) {\n    const m = self.headers['content-type'].match(\n      /boundary=(?:\"([^\"]+)\"|([^;]+))/i,\n    );\n    if (m) {\n      const initMultipart = createInitMultipart(m[1] || m[2]);\n      initMultipart.call(self, self, options); // lgtm [js/superfluous-trailing-arguments]\n    } else {\n      const err = new FormidableError(\n        'bad content-type header, no multipart boundary',\n        errors.missingMultipartBoundary,\n        400,\n      );\n      self._error(err);\n    }\n  }\n};\n\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\n// of the passed `options` (second) param, because when you decide\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\nfunction createInitMultipart(boundary) {\n  return function initMultipart() {\n    this.type = 'multipart';\n\n    const parser = new MultipartParser(this.options);\n    let headerField;\n    let headerValue;\n    let part;\n\n    parser.initWithBoundary(boundary);\n\n    // eslint-disable-next-line max-statements, consistent-return\n    parser.on('data', ({ name, buffer, start, end }) => {\n      if (name === 'partBegin') {\n        part = new Stream();\n        part.readable = true;\n        part.headers = {};\n        part.name = null;\n        part.originalFilename = null;\n        part.mimetype = null;\n\n        part.transferEncoding = this.options.encoding;\n        part.transferBuffer = '';\n\n        headerField = '';\n        headerValue = '';\n      } else if (name === 'headerField') {\n        headerField += buffer.toString(this.options.encoding, start, end);\n      } else if (name === 'headerValue') {\n        headerValue += buffer.toString(this.options.encoding, start, end);\n      } else if (name === 'headerEnd') {\n        headerField = headerField.toLowerCase();\n        part.headers[headerField] = headerValue;\n\n        // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n        const m = headerValue.match(\n          // eslint-disable-next-line no-useless-escape\n          /\\bname=(\"([^\"]*)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))/i,\n        );\n        if (headerField === 'content-disposition') {\n          if (m) {\n            part.name = m[2] || m[3] || '';\n          }\n\n          part.originalFilename = this._getFileName(headerValue);\n        } else if (headerField === 'content-type') {\n          part.mimetype = headerValue;\n        } else if (headerField === 'content-transfer-encoding') {\n          part.transferEncoding = headerValue.toLowerCase();\n        }\n\n        headerField = '';\n        headerValue = '';\n      } else if (name === 'headersEnd') {\n        switch (part.transferEncoding) {\n          case 'binary':\n          case '7bit':\n          case '8bit':\n          case 'utf-8': {\n            const dataPropagation = (ctx) => {\n              if (ctx.name === 'partData') {\n                part.emit('data', ctx.buffer.slice(ctx.start, ctx.end));\n              }\n            };\n            const dataStopPropagation = (ctx) => {\n              if (ctx.name === 'partEnd') {\n                part.emit('end');\n                parser.off('data', dataPropagation);\n                parser.off('data', dataStopPropagation);\n              }\n            };\n            parser.on('data', dataPropagation);\n            parser.on('data', dataStopPropagation);\n            break;\n          }\n          case 'base64': {\n            const dataPropagation = (ctx) => {\n              if (ctx.name === 'partData') {\n                part.transferBuffer += ctx.buffer\n                  .slice(ctx.start, ctx.end)\n                  .toString('ascii');\n\n                /*\n                  four bytes (chars) in base64 converts to three bytes in binary\n                  encoding. So we should always work with a number of bytes that\n                  can be divided by 4, it will result in a number of buytes that\n                  can be divided vy 3.\n                  */\n                const offset = parseInt(part.transferBuffer.length / 4, 10) * 4;\n                part.emit(\n                  'data',\n                  Buffer.from(\n                    part.transferBuffer.substring(0, offset),\n                    'base64',\n                  ),\n                );\n                part.transferBuffer = part.transferBuffer.substring(offset);\n              }\n            };\n            const dataStopPropagation = (ctx) => {\n              if (ctx.name === 'partEnd') {\n                part.emit('data', Buffer.from(part.transferBuffer, 'base64'));\n                part.emit('end');\n                parser.off('data', dataPropagation);\n                parser.off('data', dataStopPropagation);\n              }\n            };\n            parser.on('data', dataPropagation);\n            parser.on('data', dataStopPropagation);\n            break;\n          }\n          default:\n            return this._error(\n              new FormidableError(\n                'unknown transfer-encoding',\n                errors.unknownTransferEncoding,\n                501,\n              ),\n            );\n        }\n\n        this.onPart(part);\n      } else if (name === 'end') {\n        this.ended = true;\n        this._maybeEnd();\n      }\n    });\n\n    this._parser = parser;\n  };\n}\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst { Transform } = require('stream');\n\nclass JSONParser extends Transform {\n  constructor(options = {}) {\n    super({ readableObjectMode: true });\n    this.chunks = [];\n    this.globalOptions = { ...options };\n  }\n\n  _transform(chunk, encoding, callback) {\n    this.chunks.push(String(chunk)); // todo consider using a string decoder\n    callback();\n  }\n\n  _flush(callback) {\n    try {\n      const fields = JSON.parse(this.chunks.join(''));\n      Object.keys(fields).forEach((key) => {\n        const value = fields[key];\n        this.push({ key, value });\n      });\n    } catch (e) {\n      callback(e);\n      return;\n    }\n    this.chunks = null;\n    callback();\n  }\n}\n\nmodule.exports = JSONParser;\n", "/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst JSONParser = require('../parsers/JSON');\n\n// the `options` is also available through the `this.options` / `formidable.options`\nmodule.exports = function plugin(formidable, options) {\n  // the `this` context is always formidable, as the first argument of a plugin\n  // but this allows us to customize/test each plugin\n\n  /* istanbul ignore next */\n  const self = this || formidable;\n\n  if (/json/i.test(self.headers['content-type'])) {\n    init.call(self, self, options);\n  }\n};\n\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\n// of the passed `options` (second) param, because when you decide\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\nfunction init(_self, _opts) {\n  this.type = 'json';\n\n  const parser = new JSONParser(this.options);\n\n  parser.on('data', ({ key, value }) => {\n    this.emit('field', key, value);\n  });\n\n  parser.once('end', () => {\n    this.ended = true;\n    this._maybeEnd();\n  });\n\n  this._parser = parser;\n}\n", "'use strict';\n\nconst octetstream = require('./octetstream');\nconst querystring = require('./querystring');\nconst multipart = require('./multipart');\nconst json = require('./json');\n\nObject.assign(exports, {\n  octetstream,\n  querystring,\n  multipart,\n  json,\n});\n", "'use strict';\n\nconst JSONParser = require('./JSON');\nconst DummyParser = require('./Dummy');\nconst MultipartParser = require('./Multipart');\nconst OctetStreamParser = require('./OctetStream');\nconst QueryStringParser = require('./Querystring');\n\nObject.assign(exports, {\n  JSONParser,\n  DummyParser,\n  MultipartParser,\n  OctetStreamParser,\n  OctetstreamParser: OctetStreamParser,\n  QueryStringParser,\n  QuerystringParser: QueryStringParser,\n});\n", "'use strict';\n\nconst PersistentFile = require('./PersistentFile');\nconst VolatileFile = require('./VolatileFile');\nconst Formidable = require('./Formidable');\nconst FormidableError = require('./FormidableError');\n\nconst plugins = require('./plugins/index');\nconst parsers = require('./parsers/index');\n\n// make it available without requiring the `new` keyword\n// if you want it access `const formidable.IncomingForm` as v1\nconst formidable = (...args) => new Formidable(...args);\n\nmodule.exports = Object.assign(formidable, {\n  errors: FormidableError,\n  File: PersistentFile,\n  PersistentFile,\n  VolatileFile,\n  Formidable,\n  formidable,\n\n  // alias\n  IncomingForm: Formidable,\n\n  // parsers\n  ...parsers,\n  parsers,\n\n  // misc\n  defaultOptions: Formidable.DEFAULT_OPTIONS,\n  enabledPlugins: Formidable.DEFAULT_OPTIONS.enabledPlugins,\n\n  // plugins\n  plugins: {\n    ...plugins,\n  },\n});\n"],
  "mappings": "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",
  "names": ["cb", "self", "require_querystring", "self", "self", "self"]
}
